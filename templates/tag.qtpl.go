// Code generated by qtc from "tag.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line templates/tag.qtpl:1
package templates

//line templates/tag.qtpl:1
import "snac/Database"

//line templates/tag.qtpl:3
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line templates/tag.qtpl:3
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line templates/tag.qtpl:3
func StreamTags(qw422016 *qt422016.Writer, tags []Database.TagOverview) {
//line templates/tag.qtpl:3
	qw422016.N().S(`
	`)
//line templates/tag.qtpl:4
	for _, tag := range tags {
//line templates/tag.qtpl:4
		qw422016.N().S(`
		<input type="radio" id="tag-`)
//line templates/tag.qtpl:5
		qw422016.E().S(tag.Name)
//line templates/tag.qtpl:5
		qw422016.N().S(`" name="tag"/>
        <div class="tag" data-tag="`)
//line templates/tag.qtpl:6
		qw422016.E().S(tag.Name)
//line templates/tag.qtpl:6
		qw422016.N().S(`"><label for="tag-`)
//line templates/tag.qtpl:6
		qw422016.E().S(tag.Name)
//line templates/tag.qtpl:6
		qw422016.N().S(`"><span>`)
//line templates/tag.qtpl:6
		qw422016.E().S(tag.Name)
//line templates/tag.qtpl:6
		qw422016.N().S(` (`)
//line templates/tag.qtpl:6
		qw422016.N().D(tag.Count)
//line templates/tag.qtpl:6
		qw422016.N().S(`)<span>ï©Ž</span></span></label>
            <ul style="min-height: calc(`)
//line templates/tag.qtpl:7
		qw422016.N().D(tag.Count)
//line templates/tag.qtpl:7
		qw422016.N().S(` * (1em + 8px));"></ul>
        </div>
	`)
//line templates/tag.qtpl:9
	}
//line templates/tag.qtpl:9
	qw422016.N().S(`
`)
//line templates/tag.qtpl:10
}

//line templates/tag.qtpl:10
func WriteTags(qq422016 qtio422016.Writer, tags []Database.TagOverview) {
//line templates/tag.qtpl:10
	qw422016 := qt422016.AcquireWriter(qq422016)
//line templates/tag.qtpl:10
	StreamTags(qw422016, tags)
//line templates/tag.qtpl:10
	qt422016.ReleaseWriter(qw422016)
//line templates/tag.qtpl:10
}

//line templates/tag.qtpl:10
func Tags(tags []Database.TagOverview) string {
//line templates/tag.qtpl:10
	qb422016 := qt422016.AcquireByteBuffer()
//line templates/tag.qtpl:10
	WriteTags(qb422016, tags)
//line templates/tag.qtpl:10
	qs422016 := string(qb422016.B)
//line templates/tag.qtpl:10
	qt422016.ReleaseByteBuffer(qb422016)
//line templates/tag.qtpl:10
	return qs422016
//line templates/tag.qtpl:10
}

//line templates/tag.qtpl:12
func StreamTagContent(qw422016 *qt422016.Writer, snippets []Database.SnippetOverview) {
//line templates/tag.qtpl:12
	qw422016.N().S(`
	`)
//line templates/tag.qtpl:13
	for _, snippet := range snippets {
//line templates/tag.qtpl:13
		qw422016.N().S(`
		<li data-id="`)
//line templates/tag.qtpl:14
		qw422016.E().S(snippet.Id)
//line templates/tag.qtpl:14
		qw422016.N().S(`"><span>`)
//line templates/tag.qtpl:14
		qw422016.E().S(snippet.Id)
//line templates/tag.qtpl:14
		qw422016.N().S(`</span>`)
//line templates/tag.qtpl:14
		qw422016.E().S(snippet.Title)
//line templates/tag.qtpl:14
		qw422016.N().S(`</li>
	`)
//line templates/tag.qtpl:15
	}
//line templates/tag.qtpl:15
	qw422016.N().S(`
`)
//line templates/tag.qtpl:16
}

//line templates/tag.qtpl:16
func WriteTagContent(qq422016 qtio422016.Writer, snippets []Database.SnippetOverview) {
//line templates/tag.qtpl:16
	qw422016 := qt422016.AcquireWriter(qq422016)
//line templates/tag.qtpl:16
	StreamTagContent(qw422016, snippets)
//line templates/tag.qtpl:16
	qt422016.ReleaseWriter(qw422016)
//line templates/tag.qtpl:16
}

//line templates/tag.qtpl:16
func TagContent(snippets []Database.SnippetOverview) string {
//line templates/tag.qtpl:16
	qb422016 := qt422016.AcquireByteBuffer()
//line templates/tag.qtpl:16
	WriteTagContent(qb422016, snippets)
//line templates/tag.qtpl:16
	qs422016 := string(qb422016.B)
//line templates/tag.qtpl:16
	qt422016.ReleaseByteBuffer(qb422016)
//line templates/tag.qtpl:16
	return qs422016
//line templates/tag.qtpl:16
}
